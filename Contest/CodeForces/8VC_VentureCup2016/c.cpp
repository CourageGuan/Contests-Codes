#include<bits/stdc++.h>
using namespace std;
typedef long long LL;

LL s,x;
LL d[40][2][2][2];

LL solve()
{
	memset(d,0,sizeof d);
	LL dec = 0;
	if(s == x) dec = -2;
	int i = 0;
	while(s || x)
	{
		int ts = s&1,tx = x&1;
		if(!i)
		{
			if(tx && ts)
			{
				d[i][1][0][0] = 1;
				d[i][0][1][0] = 1;
			}
			if(!tx && !ts)
			{
				d[i][1][1][1] = 1;
				d[i][0][0][0] = 1;
			}
		}
		else
		{
			if(tx && ts)
			{
				d[i][0][1][0] += d[i-1][0][1][0];
				d[i][0][1][0] += d[i-1][1][0][0];
				d[i][0][1][0] += d[i-1][0][0][0];

				d[i][1][0][0] += d[i-1][0][1][0];
				d[i][1][0][0] += d[i-1][1][0][0];
				d[i][1][0][0] += d[i-1][0][0][0];
			}

			if(tx && !ts)
			{
				d[i][0][1][1] += d[i-1][0][1][1];
				d[i][0][1][1] += d[i-1][1][0][1];
				d[i][0][1][1] += d[i-1][1][1][1];

				d[i][1][0][1] += d[i-1][0][1][1];
				d[i][1][0][1] += d[i-1][1][0][1];
				d[i][1][0][1] += d[i-1][1][1][1];
			}
			
			if(!tx && ts)
			{
				d[i][0][0][0] += d[i-1][0][1][1];
				d[i][0][0][0] += d[i-1][1][0][1];
				d[i][0][0][0] += d[i-1][1][1][1];

				d[i][1][1][1] += d[i-1][0][1][1];
				d[i][1][1][1] += d[i-1][1][0][1];
				d[i][1][1][1] += d[i-1][1][1][1];
			}

			if(!tx && !ts)
			{
				d[i][0][0][0] += d[i-1][0][1][0];
				d[i][0][0][0] += d[i-1][1][0][0];
				d[i][0][0][0] += d[i-1][0][0][0];

				d[i][1][1][1] += d[i-1][0][1][0];
				d[i][1][1][1] += d[i-1][1][0][0];
				d[i][1][1][1] += d[i-1][0][0][0];
			}
			
		}
		s>>=1;
		x>>=1;
		++i;
	}
	--i;
	/*
	for(int j=0;j<=i;++j)
		for(int t=0;t<2;++t)
			for(int p=0;p<2;++p)
				for(int q=0;q<2;++q)
					printf("%d %d %d %d ... %d\n",j,t,p,q,d[j][t][p][q]);
	*/
	return  d[i][0][0][0] + d[i][0][1][0] + d[i][1][0][0] + dec;
}

int main()
{
	//freopen("test.txt","r",stdin);
	scanf("%lld %lld",&s,&x);
	printf("%lld\n",solve());
	return 0;
}

